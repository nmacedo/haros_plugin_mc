module startup

abstract sig Node { 
    subscribes, advertises: set Topic,
    var inbox, outbox : set Message
}

abstract sig Topic {} 

abstract sig Value {}
abstract sig Field {}

sig numeric extends Value {}
sig string extends Value {}


sig Message {
    topic : one Topic,
    value : Field -> lone Value
}{
	some value
}

fact Messages {
	no (outbox + inbox)
	all n : Node | always {
		n.inbox.topic in n.subscribes
		n.outbox.topic in n.advertises
	}
	all m : Message | always {
		m in Node.outbox implies (all n : subscribes.(m.topic) | 
			eventually (m in n.inbox))
	}
	always {
		all m : Node.outbox | eventually m not in Node.outbox
	}
	all m : Message | always{
		m in Node.inbox implies (some n : advertises.(m.topic) | 
			before once (m in n.outbox))
	}
}

sig num_0p0 in numeric{}

sig num_from_0_to_4 in numeric{}

sig num_from_0_to_100 in numeric{}

sig num_3p0 in numeric{}

sig num_from_m100_to_100 in numeric{}

sig num_from_m12_to_8 in numeric{}

sig num_from_m8_to_12 in numeric{}

sig num_from_5p8_to_6p2 in numeric{}

sig num_from_0_to_10 in numeric{}

sig num_from_3p8_to_5p8 in numeric{}

sig num_from_4p2_to_6p2 in numeric{}

sig num_from_3p8_to_4p2 in numeric{}

sig num_6p0 in numeric{}

sig num_1p0 in numeric{}

sig num_from_1_to_10 in numeric{}

fact Independence {
	 no num_0p0 & (num_3p0 + num_from_5p8_to_6p2 + num_from_3p8_to_5p8 + num_from_4p2_to_6p2 + num_from_3p8_to_4p2 + num_6p0 + num_1p0 + num_from_1_to_10)
	 no num_from_0_to_4 & (num_from_5p8_to_6p2 + num_from_4p2_to_6p2 + num_6p0)
	 no num_3p0 & (num_0p0 + num_from_5p8_to_6p2 + num_from_3p8_to_5p8 + num_from_4p2_to_6p2 + num_from_3p8_to_4p2 + num_6p0 + num_1p0)
	 no num_from_5p8_to_6p2 & (num_0p0 + num_from_0_to_4 + num_3p0 + num_from_3p8_to_4p2 + num_1p0)
	 no num_from_3p8_to_5p8 & (num_0p0 + num_3p0 + num_6p0 + num_1p0)
	 no num_from_4p2_to_6p2 & (num_0p0 + num_from_0_to_4 + num_3p0 + num_1p0)
	 no num_from_3p8_to_4p2 & (num_0p0 + num_3p0 + num_from_5p8_to_6p2 + num_6p0 + num_1p0)
	 no num_6p0 & (num_0p0 + num_from_0_to_4 + num_3p0 + num_from_3p8_to_5p8 + num_from_3p8_to_4p2 + num_1p0)
	 no num_1p0 & (num_0p0 + num_3p0 + num_from_5p8_to_6p2 + num_from_3p8_to_5p8 + num_from_4p2_to_6p2 + num_from_3p8_to_4p2 + num_6p0)
	 no num_from_1_to_10 & (num_0p0)
}

fact Inclusions {
	num_0p0 in (num_from_0_to_4 + num_from_0_to_100 + num_from_m100_to_100 + num_from_m12_to_8 + num_from_m8_to_12 + num_from_0_to_10)
	num_from_0_to_4 in (num_from_0_to_100 + num_from_m100_to_100 + num_from_m12_to_8 + num_from_m8_to_12 + num_from_0_to_10)
	num_from_0_to_100 in (num_from_m100_to_100)
	num_3p0 in (num_from_0_to_4 + num_from_0_to_100 + num_from_m100_to_100 + num_from_m12_to_8 + num_from_m8_to_12 + num_from_0_to_10 + num_from_1_to_10)
	num_from_m12_to_8 in (num_from_m100_to_100)
	num_from_m8_to_12 in (num_from_m100_to_100)
	num_from_5p8_to_6p2 in (num_from_0_to_100 + num_from_m100_to_100 + num_from_m12_to_8 + num_from_m8_to_12 + num_from_0_to_10 + num_from_4p2_to_6p2 + num_from_1_to_10)
	num_from_0_to_10 in (num_from_0_to_100 + num_from_m100_to_100 + num_from_m8_to_12)
	num_from_3p8_to_5p8 in (num_from_0_to_100 + num_from_m100_to_100 + num_from_m12_to_8 + num_from_m8_to_12 + num_from_0_to_10 + num_from_1_to_10)
	num_from_4p2_to_6p2 in (num_from_0_to_100 + num_from_m100_to_100 + num_from_m12_to_8 + num_from_m8_to_12 + num_from_0_to_10 + num_from_1_to_10)
	num_from_3p8_to_4p2 in (num_from_0_to_100 + num_from_m100_to_100 + num_from_m12_to_8 + num_from_m8_to_12 + num_from_0_to_10 + num_from_3p8_to_5p8 + num_from_1_to_10)
	num_6p0 in (num_from_0_to_100 + num_from_m100_to_100 + num_from_m12_to_8 + num_from_m8_to_12 + num_from_5p8_to_6p2 + num_from_0_to_10 + num_from_4p2_to_6p2 + num_from_1_to_10)
	num_1p0 in (num_from_0_to_4 + num_from_0_to_100 + num_from_m100_to_100 + num_from_m12_to_8 + num_from_m8_to_12 + num_from_0_to_10 + num_from_1_to_10)
	num_from_1_to_10 in (num_from_0_to_100 + num_from_m100_to_100 + num_from_m8_to_12 + num_from_0_to_10)
}

fact Singletons {
	 lone num_0p0
	 lone num_3p0
	 lone num_6p0
	 lone num_1p0
}

one sig ranges_0_sensor_msgs_LaserScan extends Field{}

fact ranges_0_sensor_msgs_LaserScan_type{
	ranges_0_sensor_msgs_LaserScan.(Message.value) in numeric
}

one sig button_1_sensor_msgs_Joy extends Field{}

fact button_1_sensor_msgs_Joy_type{
	button_1_sensor_msgs_Joy.(Message.value) in numeric
}

one sig data_0_std_msgs_Int16MultiArray extends Field{}

fact data_0_std_msgs_Int16MultiArray_type{
	data_0_std_msgs_Int16MultiArray.(Message.value) in numeric
}

one sig button_4_sensor_msgs_Joy extends Field{}

fact button_4_sensor_msgs_Joy_type{
	button_4_sensor_msgs_Joy.(Message.value) in numeric
}

one sig button_5_sensor_msgs_Joy extends Field{}

fact button_5_sensor_msgs_Joy_type{
	button_5_sensor_msgs_Joy.(Message.value) in numeric
}

one sig linear_xgeometry_msgs_Twist extends Field{}

fact linear_xgeometry_msgs_Twist_type{
	linear_xgeometry_msgs_Twist.(Message.value) in numeric
}

one sig button_0_sensor_msgs_Joy extends Field{}

fact button_0_sensor_msgs_Joy_type{
	button_0_sensor_msgs_Joy.(Message.value) in numeric
}

one sig angular_xgeometry_msgs_Twist extends Field{}

fact angular_xgeometry_msgs_Twist_type{
	angular_xgeometry_msgs_Twist.(Message.value) in numeric
}

one sig _joy_teleop_joy extends Topic{}

one sig _joy_teleop_cmd_vel extends Topic{}

one sig _supervisor_cmd_vel extends Topic{}

one sig _agrobv16_max_velocity extends Topic{}

one sig _husky_velocity_controller_cmd_vel extends Topic{}

one sig _agrobv16_current_state extends Topic{}

one sig _scan extends Topic{}

fact type_coherency{
	((topic._joy_teleop_joy).value).Value in ((button_0_sensor_msgs_Joy + button_1_sensor_msgs_Joy + button_4_sensor_msgs_Joy + button_5_sensor_msgs_Joy))
	((topic._joy_teleop_cmd_vel).value).Value in ((linear_xgeometry_msgs_Twist + angular_xgeometry_msgs_Twist))
	((topic._supervisor_cmd_vel).value).Value in ((linear_xgeometry_msgs_Twist + angular_xgeometry_msgs_Twist))
	((topic._agrobv16_max_velocity).value).Value in ((linear_xgeometry_msgs_Twist))
	((topic._husky_velocity_controller_cmd_vel).value).Value in ((linear_xgeometry_msgs_Twist + angular_xgeometry_msgs_Twist))
	((topic._agrobv16_current_state).value).Value in ((data_0_std_msgs_Int16MultiArray))
	((topic._scan).value).Value in ((ranges_0_sensor_msgs_LaserScan))

}

one sig _hector_mapping extends Node{}{
	subscribes = _scan
	advertises = none
}

one sig _joy_teleop_joy_node extends Node{}{
	subscribes = none
	advertises = _joy_teleop_joy
}

fact _joy_teleop_joy_node_behaviour{
	always{
		((no m0: _joy_teleop_joy_node.outbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) not in num_0p0) and (button_0_sensor_msgs_Joy.(m0.value) not in num_1p0))))
		((no m0: _joy_teleop_joy_node.outbox & topic._joy_teleop_joy | ((button_1_sensor_msgs_Joy.(m0.value) not in num_0p0) and (button_1_sensor_msgs_Joy.(m0.value) not in num_1p0))))
		((no m0: _joy_teleop_joy_node.outbox & topic._joy_teleop_joy | ((button_4_sensor_msgs_Joy.(m0.value) not in num_0p0) and (button_4_sensor_msgs_Joy.(m0.value) not in num_1p0))))
		((no m0: _joy_teleop_joy_node.outbox & topic._joy_teleop_joy | ((button_5_sensor_msgs_Joy.(m0.value) not in num_0p0) and (button_5_sensor_msgs_Joy.(m0.value) not in num_1p0))))
	
	}
}

one sig _supervisorGUI1 extends Node{}{
	subscribes = _agrobv16_current_state
	advertises = none
}

one sig _husky_node extends Node{}{
	subscribes = _husky_velocity_controller_cmd_vel
	advertises = none
}

one sig _joy_teleop_teleop_twist_joy extends Node{}{
	subscribes = _joy_teleop_joy
	advertises = _joy_teleop_cmd_vel
}

fact _joy_teleop_teleop_twist_joy_behaviour{
	always{
		((no m0: _joy_teleop_teleop_twist_joy.outbox & topic._joy_teleop_cmd_vel | ((linear_xgeometry_msgs_Twist.(m0.value) not in num_from_0_to_10))))
		((some m1: _joy_teleop_teleop_twist_joy.outbox & topic._joy_teleop_cmd_vel | ((linear_xgeometry_msgs_Twist.(m1.value) in num_from_0_to_10))))
			implies before once (((some m0: _joy_teleop_teleop_twist_joy.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_1p0) and (button_1_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_4_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_5_sensor_msgs_Joy.(m0.value) = num_0p0)))))
	
	}
}

one sig _Agrobv16_twist_mux extends Node{}{
	subscribes = _agrobv16_max_velocity + _supervisor_cmd_vel + _joy_teleop_cmd_vel
	advertises = _husky_velocity_controller_cmd_vel
}

fact _Agrobv16_twist_mux_behaviour{
	always{
		((some m1: _Agrobv16_twist_mux.outbox & topic._husky_velocity_controller_cmd_vel | ((linear_xgeometry_msgs_Twist.(m1.value) != num_0p0))))
			implies before once (((some m0: _Agrobv16_twist_mux.inbox & topic._agrobv16_max_velocity | ((linear_xgeometry_msgs_Twist.(m0.value) != num_0p0)))))
		((some m1: _Agrobv16_twist_mux.outbox & topic._husky_velocity_controller_cmd_vel | ((linear_xgeometry_msgs_Twist.(m1.value) = num_0p0))))
			implies before once (((some m0: _Agrobv16_twist_mux.inbox & topic._agrobv16_max_velocity | ((linear_xgeometry_msgs_Twist.(m0.value) = num_0p0))) or (some m0: _Agrobv16_twist_mux.inbox & topic._joy_teleop_cmd_vel | ((linear_xgeometry_msgs_Twist.(m0.value) = num_0p0)))))
		((some m0: _Agrobv16_twist_mux.inbox & topic._agrobv16_max_velocity | ((linear_xgeometry_msgs_Twist.(m0.value) = num_0p0))))
			implies eventually (((some m1: _Agrobv16_twist_mux.outbox & topic._husky_velocity_controller_cmd_vel | ((linear_xgeometry_msgs_Twist.(m1.value) = num_0p0)))))
		all m1: _Agrobv16_twist_mux.outbox & topic._husky_velocity_controller_cmd_vel| ((linear_xgeometry_msgs_Twist.(m1.value) != num_0p0))
			implies before once (((some m0: _Agrobv16_twist_mux.inbox & topic._supervisor_cmd_vel | ((linear_xgeometry_msgs_Twist.(m0.value) = linear_xgeometry_msgs_Twist.(m1.value)) and (angular_xgeometry_msgs_Twist.(m0.value) = angular_xgeometry_msgs_Twist.(m1.value)))) or (some m0: _Agrobv16_twist_mux.inbox & topic._joy_teleop_cmd_vel | ((linear_xgeometry_msgs_Twist.(m0.value) = linear_xgeometry_msgs_Twist.(m1.value)) and (angular_xgeometry_msgs_Twist.(m0.value) = angular_xgeometry_msgs_Twist.(m1.value))))))
		all m0: _Agrobv16_twist_mux.inbox & topic._supervisor_cmd_vel | ((linear_xgeometry_msgs_Twist.(m0.value) in num_from_0_to_10))
			implies eventually (((some m1: _Agrobv16_twist_mux.outbox & topic._husky_velocity_controller_cmd_vel | ((linear_xgeometry_msgs_Twist.(m1.value) = linear_xgeometry_msgs_Twist.(m0.value)) and (angular_xgeometry_msgs_Twist.(m1.value) = angular_xgeometry_msgs_Twist.(m0.value))))))
	
	}
}

one sig _lms1xx extends Node{}{
	subscribes = none
	advertises = _scan
}

fact _lms1xx_behaviour{
	always{
		((no m0: _lms1xx.outbox & topic._scan | ((ranges_0_sensor_msgs_LaserScan.(m0.value) not in num_from_0_to_100))))
	
	}
}

one sig _agrobv16SUPERVISOR extends Node{}{
	subscribes = _joy_teleop_joy + _scan
	advertises = _agrobv16_current_state + _agrobv16_max_velocity + _supervisor_cmd_vel
}

fact _agrobv16SUPERVISOR_behaviour{
	always{
		((no m0: _agrobv16SUPERVISOR.outbox & topic._agrobv16_current_state | ((data_0_std_msgs_Int16MultiArray.(m0.value) not in num_0p0) and (data_0_std_msgs_Int16MultiArray.(m0.value) not in num_3p0) and (data_0_std_msgs_Int16MultiArray.(m0.value) not in num_6p0))))
		((some m1: _agrobv16SUPERVISOR.outbox & topic._agrobv16_current_state | ((data_0_std_msgs_Int16MultiArray.(m1.value) = num_6p0))))
			implies before once (((some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_1p0)))))
		((some m1: _agrobv16SUPERVISOR.outbox & topic._agrobv16_current_state | ((data_0_std_msgs_Int16MultiArray.(m1.value) = num_3p0))))
			implies before once (((some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_1_sensor_msgs_Joy.(m0.value) = num_1p0)))))
		((some m1: _agrobv16SUPERVISOR.outbox & topic._agrobv16_current_state | ((data_0_std_msgs_Int16MultiArray.(m1.value) = num_0p0))))
			implies before once (((some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_1_sensor_msgs_Joy.(m0.value) = num_0p0)))))
		((no m0: _agrobv16SUPERVISOR.outbox & topic._supervisor_cmd_vel | ((linear_xgeometry_msgs_Twist.(m0.value) not in num_from_0_to_10))))
		((some m1: _agrobv16SUPERVISOR.outbox & topic._supervisor_cmd_vel | ((linear_xgeometry_msgs_Twist.(m1.value) in num_from_1_to_10))))
			implies before once (((some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_1_sensor_msgs_Joy.(m0.value) = num_1p0))) or (some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_4_sensor_msgs_Joy.(m0.value) = num_1p0))) or (some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_5_sensor_msgs_Joy.(m0.value) = num_1p0)))))
		((some m1: _agrobv16SUPERVISOR.outbox & topic._supervisor_cmd_vel | ((linear_xgeometry_msgs_Twist.(m1.value) in num_from_0_to_10) and (linear_xgeometry_msgs_Twist.(m1.value) not in num_from_3p8_to_5p8) and (linear_xgeometry_msgs_Twist.(m1.value) not in num_from_4p2_to_6p2))))
			implies before once (((some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_1_sensor_msgs_Joy.(m0.value) = num_1p0)))))
		((some m1: _agrobv16SUPERVISOR.outbox & topic._supervisor_cmd_vel | ((linear_xgeometry_msgs_Twist.(m1.value) in num_from_3p8_to_4p2))))
			implies before once (((some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_1_sensor_msgs_Joy.(m0.value) = num_1p0))) or (some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_4_sensor_msgs_Joy.(m0.value) = num_1p0) and (button_5_sensor_msgs_Joy.(m0.value) = num_0p0)))))
		((some m1: _agrobv16SUPERVISOR.outbox & topic._supervisor_cmd_vel | ((linear_xgeometry_msgs_Twist.(m1.value) in num_from_5p8_to_6p2))))
			implies before once (((some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_1_sensor_msgs_Joy.(m0.value) = num_1p0))) or (some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_4_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_5_sensor_msgs_Joy.(m0.value) = num_1p0)))))
		((no m0: _agrobv16SUPERVISOR.outbox & topic._supervisor_cmd_vel | ((angular_xgeometry_msgs_Twist.(m0.value) not in num_from_m100_to_100))))
		((some m1: _agrobv16SUPERVISOR.outbox & topic._supervisor_cmd_vel | ((angular_xgeometry_msgs_Twist.(m1.value) not in num_from_m100_to_100))))
			implies before once (((some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_1_sensor_msgs_Joy.(m0.value) = num_1p0))) or (some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_4_sensor_msgs_Joy.(m0.value) = num_1p0) and (button_5_sensor_msgs_Joy.(m0.value) = num_0p0))) or (some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_4_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_5_sensor_msgs_Joy.(m0.value) = num_1p0)))))
		((some m1: _agrobv16SUPERVISOR.outbox & topic._supervisor_cmd_vel | ((angular_xgeometry_msgs_Twist.(m1.value) in num_from_m8_to_12) and (angular_xgeometry_msgs_Twist.(m1.value) not in num_from_m12_to_8))))
			implies before once (((some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_1_sensor_msgs_Joy.(m0.value) = num_1p0))) or (some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_4_sensor_msgs_Joy.(m0.value) = num_1p0) and (button_5_sensor_msgs_Joy.(m0.value) = num_0p0)))))
		((some m1: _agrobv16SUPERVISOR.outbox & topic._supervisor_cmd_vel | ((angular_xgeometry_msgs_Twist.(m1.value) not in num_from_m8_to_12) and (angular_xgeometry_msgs_Twist.(m1.value) in num_from_m12_to_8))))
			implies before once (((some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_1_sensor_msgs_Joy.(m0.value) = num_1p0))) or (some m0: _agrobv16SUPERVISOR.inbox & topic._joy_teleop_joy | ((button_4_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_5_sensor_msgs_Joy.(m0.value) = num_1p0)))))
		((some m1: _agrobv16SUPERVISOR.outbox & topic._agrobv16_max_velocity | ((linear_xgeometry_msgs_Twist.(m1.value) = num_0p0))))
			implies before once (((some m0: _agrobv16SUPERVISOR.inbox & topic._scan | ((ranges_0_sensor_msgs_LaserScan.(m0.value) in num_from_0_to_4)))))
	
	}
}

check prop_0{
	always {
		((some m1: Node.outbox & topic._agrobv16_current_state | ((data_0_std_msgs_Int16MultiArray.(m1.value) = num_3p0))))
			implies before once (((some m0: Node.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_1_sensor_msgs_Joy.(m0.value) = num_1p0)))))
	}
} for 4 but exactly 4 Value, 4 Message, exactly 10 Time

check prop_1{
	always {
		((some m1: Node.outbox & topic._agrobv16_current_state | ((data_0_std_msgs_Int16MultiArray.(m1.value) = num_6p0))))
			implies before once (((some m0: Node.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_1p0)))))
	}
} for 4 but exactly 4 Value, 4 Message, exactly 10 Time

check prop_2{
	always {
		((some m1: Node.outbox & topic._agrobv16_current_state | ((data_0_std_msgs_Int16MultiArray.(m1.value) = num_0p0))))
			implies before once (((some m0: Node.inbox & topic._joy_teleop_joy | ((button_1_sensor_msgs_Joy.(m0.value) = num_0p0) and (button_0_sensor_msgs_Joy.(m0.value) = num_0p0)))))
	}
} for 4 but exactly 4 Value, 4 Message, exactly 10 Time

check prop_3{
	always {
		((some m1: Node.outbox & topic._husky_velocity_controller_cmd_vel | ((linear_xgeometry_msgs_Twist.(m1.value) = num_0p0) and (angular_xgeometry_msgs_Twist.(m1.value) != num_0p0))))
			implies before once (((some m0: Node.inbox & topic._scan | ((ranges_0_sensor_msgs_LaserScan.(m0.value) in num_from_0_to_4))) or (some m0: Node.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_1p0)))))
	}
} for 4 but exactly 4 Value, 4 Message, exactly 10 Time


check prop_4{
	always {
		((some m1: Node.outbox & topic._husky_velocity_controller_cmd_vel | ((linear_xgeometry_msgs_Twist.(m1.value) in num_from_1_to_10 and some linear_xgeometry_msgs_Twist.(m1.value)))))
			implies before once (((some m0: Node.inbox & topic._joy_teleop_joy | ((button_0_sensor_msgs_Joy.(m0.value) = num_1p0 and some button_0_sensor_msgs_Joy.(m0.value)))) or (some m0: Node.inbox & topic._joy_teleop_joy | ((button_1_sensor_msgs_Joy.(m0.value) = num_1p0 and some button_1_sensor_msgs_Joy)))))
	}
} for 4 but exactly 4 Value, 4 Message, exactly 10 Time

